import React from 'react';
import { FaArrowUp, FaArrowDown, FaApple, FaBuilding, FaMicrochip, FaCar, FaArrowLeft, FaInfoCircle } from 'react-icons/fa';
import SingleStockGraph from './SingleStockGraph';
import { Tooltip } from 'react-tooltip';
import Chatbot from './Chatbot';
import stockData from '../stock_performance.json';
import '../styles/StockDetail.css';
import { Stock, HistoricalData} from '../types/Stock';

interface StockDetailProps {
  stock: Stock;
  onBack: () => void;
} 

interface StockDetails {
  icon: JSX.Element;
  description: string;
}

const metricExplanations = {
  PreviousClose: "The last price at which the stock traded during the previous trading session.",
  Open: "The price at which the stock opened for trading during the current trading session.",
  Bid: "The highest price a buyer is willing to pay for the stock.",
  Ask: "The lowest price a seller is willing to accept for the stock.",
  Range: "The lowest and highest prices at which the stock traded during the current trading session.",
  YearRange: "The lowest and highest prices at which the stock traded over the past 52 weeks.",
  Volume: "The total number of shares traded during the current trading session.",
  AvgVolume: "The average number of shares traded per day over a specified period.",
  MarketCap: "The total market value of a company's outstanding shares.",
  Beta: "A measure of a stock's volatility in relation to the market.",
  PERatio: "The ratio for valuing a company that measures its current share price relative to its per-share earnings.",
  Revenue: "The total amount of income generated by the sale of goods or services related to the company's primary operations.",
  EBITDA: "Earnings Before Interest, Taxes, Depreciation, and Amortization - a measure of a company's overall financial performance."
};

const stockDetails: { [key: string]: StockDetails } = {
  AAPL: {
    icon: <FaApple size={36} color="#A3AAAE" />,
    description: "Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also sells various related services. The company offers iPhone, a line of smartphones; Mac, a line of personal computers; iPad, a line of multi-purpose tablets; and wearables, home, and accessories comprising AirPods, Apple TV, Apple Watch, Beats products, HomePod, iPod touch, and other Apple-branded and third-party accessories."
  },
  NVDA: {
    icon: <FaMicrochip size={36} color="#76B900" />,
    description: "NVIDIA Corporation operates as a visual computing company worldwide. It operates in two segments, GPU and Tegra Processor. The GPU segment offers products that include GeForce for gamers; Quadro for designers; Tesla and DGX for AI data scientists and big data researchers; and GRID for cloud-based visual computing users."
  },
  TSLA: {
    icon: <FaCar size={36} color="#E82127" />,
    description: "Tesla, Inc. designs, develops, manufactures, and sells electric vehicles, and energy generation and storage systems in the United States, China, Netherlands, Norway, and internationally. The company operates in two segments, Automotive, and Energy Generation and Storage."
  },
  GS: {
    icon: <FaBuilding size={36} color="#D4AF37" />,
    description: "The Goldman Sachs Group, Inc. operates as an investment banking, securities, and investment management company worldwide. It operates through four segments: Investment Banking, Global Markets, Asset Management, and Consumer & Wealth Management."
  }
};

const StockDetail: React.FC<StockDetailProps> = ({ stock, onBack }) => {
  const stockDetail: StockDetails = stockDetails[stock.stock] || { icon: <FaInfoCircle size={36} />, description: "Description not available." };

  return (
    <div className="stock-detail-container">
      <button onClick={onBack} className="stock-detail-back-button">
        <FaArrowLeft size={20} />
      </button>
      <div className="stock-detail-header">
        <div className="header-left">
          {stockDetail.icon}
          <h1>{stock.stock}</h1>
        </div>
        <div className="header-divider"></div>
        <div className="header-right">
          <p className="stock-price">${stock.price.toFixed(2)}</p>
          <p className={`stock-change ${stock.up ? 'up' : 'down'}`}>
            {stock.up ? <FaArrowUp /> : <FaArrowDown />} {stock.change.toFixed(2)} ({stock.up ? '+' : ''}{stock.percent.toFixed(2)}%)
          </p>
        </div>
      </div>
      <div className="stock-detail-content">
        <div className="stock-detail-info">
          <h3>Stock Details</h3>
          {Object.entries(stock).map(([key, value], index) => (
            key !== 'stock' && key !== 'price' && key !== 'change' && key !== 'percent' && key !== 'up' && (
              <div key={index} className="stock-detail-info-item">
                <div className="metric-icon">
                  <FaInfoCircle data-tooltip-id={`tooltip-${key}`} className="info-icon" />
                  <Tooltip id={`tooltip-${key}`} place="right">
                    {metricExplanations[key as keyof typeof metricExplanations] }
                  </Tooltip>
                </div>
                <div className="metric-details">
                  <span className="metric-key">{key.replace(/([A-Z])/g, ' $1')}:</span>
                  <span className="metric-value">{value}</span>
                </div>
              </div>
            )
          ))}
        </div>
        <div className="stock-detail-graph-about">
          <div className="stock-detail-graph">
            <SingleStockGraph stock= {stock.stock as keyof HistoricalData}/>
          </div>
          <div className="about-section">
            <h3>About {stock.stock}</h3>
            <p>{stockDetail.description}</p>
          </div>
        </div>
        <div className="chatbot-section">
          <h3>Personal TA</h3>
          <Chatbot />
        </div>
      </div>
    </div>
  );
};

export default StockDetail;
